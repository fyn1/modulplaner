// <auto-generated />
using System;
using FhModulplaner.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FhModulplaner.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230804090642_UpdateUser2")]
    partial class UpdateUser2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("FhModulplaner.Data.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseOfStudyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FhCourseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Semester")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourseOfStudyId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("FhModulplaner.Data.CourseOfStudy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Po")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CoursesOfStudies");
                });

            modelBuilder.Entity("FhModulplaner.Data.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("LessonType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentSet")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeBegin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeSlotBegin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimeSlotDuration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weekday")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("FhModulplaner.Data.OpenTimetable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OpendTimetableId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TimetableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OpendTimetableId");

                    b.HasIndex("TimetableId");

                    b.ToTable("OpenTimetables");
                });

            modelBuilder.Entity("FhModulplaner.Data.OpenTimetableSemester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseOfStudyId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Semester")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TimetableId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseOfStudyId");

                    b.HasIndex("TimetableId");

                    b.ToTable("OpenTimetableSemesters");
                });

            modelBuilder.Entity("FhModulplaner.Data.Timetable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OpendDayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isInUse")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Timetables");
                });

            modelBuilder.Entity("FhModulplaner.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ADId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LessonTimetable", b =>
                {
                    b.Property<Guid>("LessonsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TimetablesId")
                        .HasColumnType("TEXT");

                    b.HasKey("LessonsId", "TimetablesId");

                    b.HasIndex("TimetablesId");

                    b.ToTable("LessonTimetable");
                });

            modelBuilder.Entity("FhModulplaner.Data.Course", b =>
                {
                    b.HasOne("FhModulplaner.Data.CourseOfStudy", "CourseOfStufy")
                        .WithMany("Courses")
                        .HasForeignKey("CourseOfStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseOfStufy");
                });

            modelBuilder.Entity("FhModulplaner.Data.Lesson", b =>
                {
                    b.HasOne("FhModulplaner.Data.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("FhModulplaner.Data.OpenTimetable", b =>
                {
                    b.HasOne("FhModulplaner.Data.Timetable", "OpendTimetable")
                        .WithMany()
                        .HasForeignKey("OpendTimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FhModulplaner.Data.Timetable", "Timetable")
                        .WithMany()
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpendTimetable");

                    b.Navigation("Timetable");
                });

            modelBuilder.Entity("FhModulplaner.Data.OpenTimetableSemester", b =>
                {
                    b.HasOne("FhModulplaner.Data.CourseOfStudy", "CourseOfStudy")
                        .WithMany("OpenTimetableSemesters")
                        .HasForeignKey("CourseOfStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FhModulplaner.Data.Timetable", "Timetable")
                        .WithMany("OpenTimetableSemesters")
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseOfStudy");

                    b.Navigation("Timetable");
                });

            modelBuilder.Entity("FhModulplaner.Data.Timetable", b =>
                {
                    b.HasOne("FhModulplaner.Data.User", "User")
                        .WithMany("Timetables")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LessonTimetable", b =>
                {
                    b.HasOne("FhModulplaner.Data.Lesson", null)
                        .WithMany()
                        .HasForeignKey("LessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FhModulplaner.Data.Timetable", null)
                        .WithMany()
                        .HasForeignKey("TimetablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FhModulplaner.Data.Course", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("FhModulplaner.Data.CourseOfStudy", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("OpenTimetableSemesters");
                });

            modelBuilder.Entity("FhModulplaner.Data.Timetable", b =>
                {
                    b.Navigation("OpenTimetableSemesters");
                });

            modelBuilder.Entity("FhModulplaner.Data.User", b =>
                {
                    b.Navigation("Timetables");
                });
#pragma warning restore 612, 618
        }
    }
}
